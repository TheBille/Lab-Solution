-- Lab 2.08 -- 
-- Question 1
-- Rank films by length (filter out the rows that have nulls or 0s in length column). 
-- In your output, only select the columns title, length, and the rank.
select title, length, 
rank() over (order by length desc) as 'rank'
from film
where length is not Null and length > 0;

-- Question 2
-- Rank films by length within the rating category (filter out the rows that have nulls or 0s in length column). 
-- In your output, only select the columns title, length, rating and the rank.
select title, length, rating, 
rank() over (partition by rating order by length desc) as 'rank'
from film
where length is not Null and length > 0;

-- Question 3
-- How many films are there for each of the categories in the category table. Use appropriate join to write this query
select count(*), name
from film_category as fc
inner join category as cat
on fc.category_id = cat.category_id
group by name
order by count(*) desc;

-- Question 4 
-- Which actor has appeared in the most films?
select actor_id, count(film_id)
from film_actor
group by actor_id
order by count(film_id) desc;
select *
from actor
where actor_id = 107;

-- there is also a way to do it with a join function which merges film_actor and actor and grouped by actor_id but it seems 
 
-- Question 5
--  Most active customer (the customer that has rented the most number of films)
-- join the customer table with rental table
select cus.customer_id, last_name, count(rental_id)
from customer as cus
inner join rental as ren
on cus.customer_id = ren.customer_id
group by customer_id
order by count(rental_id) desc;

-- Bonus 
select a.film_id, title, count(rental_id) 
from inventory as a
	inner join rental as b
	on a.inventory_id = b.inventory_id
		inner join film as c
		on a.film_id = c.film_id
group by a.film_id
order by count(rental_id) desc;
